#!/bin/bash

repos=${REPOS_PATH}
b=master
delay=50400
variance=600
maxtags=24

rand_string() {
    local c=0 s=
    while [ $c -lt $1 ]; do
        s="$s\x$(printf '%x' $((97+RANDOM%25)))"
        c=$((c+1))
    done
    printf "$s\n"
}


tagger(){
            echo -e "\e[32m""sleeping for $repos_ival since $(date +%H:%M:%S\ %b/%d)""\e[0m"
    ## refresh repo

      if  [ ! -e /opt/ci/.update ]; then
    git reset --hard
    git checkout "$b"
    git reset --hard "origin/$b"
    git pull --force
    fi

    ## check last commit date
    now=$(date +%s)
    last_date=$(git --no-pager log -1 --date=unix --format=%cd)
    if [ "$((now-last_date))" -gt "$delay" ]; then
        git reset --soft HEAD~1 --
        git add -A .
        git commit -m"$(/opt/bin/commit-msg)" --allow-empty
        timeout 60 git push origin --force
    fi
}

main(){
    while :; do
        repos_count=$(ls -ld ${repos}/* | grep -c ^d)
        repos_ival=$(((RANDOM%variance+delay)/repos_count))
        for r in $repos/*; do
            cd "$r"
            git fetch --all
            tagger
            echo -e "\e[32m""sleeping for $repos_ival since $(date +%H:%M:%S\ %b/%d)""\e[0m"
            sleep $repos_ival
        done
        sleep 1
    done
}

main
